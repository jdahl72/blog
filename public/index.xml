<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeremy&#39;s Blog</title>
    <link>https://jeremysblog.netlify.com/</link>
    <description>Recent content on Jeremy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeremysblog.netlify.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bar Plots</title>
      <link>https://jeremysblog.netlify.com/blog/bar-plots/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/bar-plots/</guid>
      <description>Today we will be looking at bar plots and visualizing some more data!
library(Lahman) library(sqldf) ## Loading required package: gsubfn ## Loading required package: proto ## Warning in doTryCatch(return(expr), name, parentenv, handler): unable to load shared object &amp;#39;/Library/Frameworks/R.framework/Resources/modules//R_X11.so&amp;#39;: ## dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 6): Library not loaded: /opt/X11/lib/libSM.6.dylib ## Referenced from: /Library/Frameworks/R.framework/Resources/modules//R_X11.so ## Reason: image not found ## Could not load tcltk. Will use slower R code instead. ## Loading required package: RSQLite library(ggplot2) We’ll be taking a look at team homerun totals for MLB teams in 1980 (too bad we’re not doing it on 2017 because we’d be seeing the Yankees at the top!</description>
    </item>
    
    <item>
      <title>Bar Plots</title>
      <link>https://jeremysblog.netlify.com/post/bar-plots/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/post/bar-plots/</guid>
      <description>Today we will be looking at bar plots and visualizing some more data!
library(Lahman) library(sqldf) library(ggplot2) We’ll be taking a look at team homerun totals for MLB teams in 1980 (too bad we’re not doing it on 2017 because we’d be seeing the Yankees at the top!)
query&amp;lt;-&amp;quot;SELECT name,HR FROM Teams WHERE yearID=1980 ORDER BY HR &amp;quot; result&amp;lt;-sqldf(query) result$name&amp;lt;-factor(result$name,levels=result$name) We had to include the last line to flip the data from being ordered alphabetically to in the order we would like.</description>
    </item>
    
    <item>
      <title>Histograms</title>
      <link>https://jeremysblog.netlify.com/blog/histograms/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/histograms/</guid>
      <description>Next on the data visualization list, histograms!
For this exercise, we will look at the weights of MLB players in the Lahman database.
library(Lahman) library(sqldf) ## Loading required package: gsubfn ## Loading required package: proto ## Warning in doTryCatch(return(expr), name, parentenv, handler): unable to load shared object &amp;#39;/Library/Frameworks/R.framework/Resources/modules//R_X11.so&amp;#39;: ## dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 6): Library not loaded: /opt/X11/lib/libSM.6.dylib ## Referenced from: /Library/Frameworks/R.framework/Resources/modules//R_X11.so ## Reason: image not found ## Could not load tcltk. Will use slower R code instead.</description>
    </item>
    
    <item>
      <title>Histograms</title>
      <link>https://jeremysblog.netlify.com/post/histograms/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/post/histograms/</guid>
      <description>Next on the data visualization list, histograms!
For this exercise, we will look at the weights of MLB players in the Lahman database.
library(Lahman) library(sqldf) library(ggplot2) The sql request is the following:
query&amp;lt;-&amp;quot;SELECT weight FROM Master&amp;quot; result&amp;lt;-sqldf(query) Similarly to a scatterplot, we can create all the labels and title all at once using ggplot2.
ggplot()+ geom_histogram(data=result,aes(x=weight),color=&amp;quot;blue&amp;quot;,fill=&amp;quot;white&amp;quot;,bins=60)+ ggtitle(&amp;quot;Distribution of Baseball Player Bodyweight&amp;quot;)+ xlab(&amp;quot;Weight of player&amp;quot;)+ ylab(&amp;quot;Number of players&amp;quot;) ## Warning: Removed 854 rows containing non-finite values (stat_bin).</description>
    </item>
    
    <item>
      <title>Scatterplots</title>
      <link>https://jeremysblog.netlify.com/blog/scatterplots/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/scatterplots/</guid>
      <description>Using the Lahman database, we’re going to look at homerun and strikeout statistics to make a scatterplot!
The first thing we do is download the libraries needed so we can get our data and the tools necessary to visualize this data.
library(Lahman) library(sqldf) ## Loading required package: gsubfn ## Loading required package: proto ## Warning in doTryCatch(return(expr), name, parentenv, handler): unable to load shared object &amp;#39;/Library/Frameworks/R.framework/Resources/modules//R_X11.so&amp;#39;: ## dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 6): Library not loaded: /opt/X11/lib/libSM.</description>
    </item>
    
    <item>
      <title>Scatterplots</title>
      <link>https://jeremysblog.netlify.com/post/scatterplots/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/post/scatterplots/</guid>
      <description>Using the Lahman database, we’re going to look at homerun and strikeout statistics to make a scatterplot!
The first thing we do is download the libraries needed so we can get our data and the tools necessary to visualize this data.
library(Lahman) library(sqldf) library(ggplot2) Then, we begin specifying exactly what we’re looking for. With this problem, we’re taking a look at players who managed to hit more than 400 homeruns and the amount of strikeouts they had.</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://jeremysblog.netlify.com/blog/time-series/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/time-series/</guid>
      <description>Just like last time, we will be taking a look at data visualization! Thankfully, this time we will be focusing on perhaps the best baseball player of all time on the best team of all time: Babe Ruth of the New York Yankees! (Unfortunately we’ll have to include his statistics as a member of the Red Sox, but we’ll have to look over that)
The time series will give us an opportunity to see how his statistics progressed over his career.</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://jeremysblog.netlify.com/post/time-series/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/post/time-series/</guid>
      <description>Just like last time, we will be taking a look at data visualization! Thankfully, this time we will be focusing on perhaps the best baseball player of all time on the best team of all time: Babe Ruth of the New York Yankees! (Unfortunately we’ll have to include his statistics as a member of the Red Sox, but we’ll have to look over that)
The time series will give us an opportunity to see how his statistics progressed over his career.</description>
    </item>
    
    <item>
      <title>SQL</title>
      <link>https://jeremysblog.netlify.com/post/sql/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/post/sql/</guid>
      <description>SQL Filtering Rows and Columns
With SQL, you can filter columns with SELECT and rows with WHERE. Let’s look at an example using the Lahman baseball database.First we need to load some packages.
library(Lahman) library(sqldf) Suppose we want to see the homerun totals for the 1927 Yankees. We could write the following:
query&amp;lt;-&amp;quot;SELECT playerID,yearID,teamID,HR FROM Batting WHERE teamID=&amp;#39;NYA&amp;#39;and yearID=1927&amp;quot; sqldf(query) ## playerID yearID teamID HR ## 1 beallwa01 1927 NYA 0 ## 2 bengobe01 1927 NYA 0 ## 3 collipa01 1927 NYA 7 ## 4 combsea01 1927 NYA 6 ## 5 duganjo01 1927 NYA 2 ## 6 durstce01 1927 NYA 0 ## 7 gazelmi01 1927 NYA 0 ## 8 gehrilo01 1927 NYA 47 ## 9 giardjo01 1927 NYA 0 ## 10 grabojo01 1927 NYA 0 ## 11 hoytwa01 1927 NYA 0 ## 12 koenima01 1927 NYA 3 ## 13 lazzeto01 1927 NYA 18 ## 14 meusebo01 1927 NYA 8 ## 15 moorewi01 1927 NYA 1 ## 16 morehra01 1927 NYA 1 ## 17 paschbe01 1927 NYA 2 ## 18 pennohe01 1927 NYA 0 ## 19 pipgrge01 1927 NYA 1 ## 20 ruethdu01 1927 NYA 1 ## 21 ruthba01 1927 NYA 60 ## 22 shawkbo01 1927 NYA 0 ## 23 shockur01 1927 NYA 0 ## 24 thomamy01 1927 NYA 0 ## 25 weraju01 1927 NYA 1 In this scenario, we can filter our selection to players from the New York Yankees who have had seasons of 40 or more home runs while striking out less than 60 times, which is quite a feat.</description>
    </item>
    
    <item>
      <title>Fancy App 1</title>
      <link>https://jeremysblog.netlify.com/itemized/item1/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/itemized/item1/</guid>
      <description> App 1 </description>
    </item>
    
    <item>
      <title>Fancy App 2</title>
      <link>https://jeremysblog.netlify.com/itemized/item2/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/itemized/item2/</guid>
      <description> App 2 </description>
    </item>
    
    <item>
      <title>Fancy App 3</title>
      <link>https://jeremysblog.netlify.com/itemized/item3/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/itemized/item3/</guid>
      <description> App 3 </description>
    </item>
    
    <item>
      <title>Fancy App 4</title>
      <link>https://jeremysblog.netlify.com/itemized/item4/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/itemized/item4/</guid>
      <description> App 4 </description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://jeremysblog.netlify.com/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://jeremysblog.netlify.com/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://jeremysblog.netlify.com/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://jeremysblog.netlify.com/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://jeremysblog.netlify.com/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://jeremysblog.netlify.com/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jeremysblog.netlify.com/blog/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>